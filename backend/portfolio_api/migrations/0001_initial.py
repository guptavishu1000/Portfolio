# Generated by Django 5.2.5 on 2025-09-18 06:24

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Visitor's name", max_length=100)),
                ('email', models.EmailField(help_text="Visitor's email address", max_length=254)),
                ('subject', models.CharField(help_text='Message subject', max_length=200)),
                ('message', models.TextField(help_text='Message content')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read', models.BooleanField(default=False, help_text='Mark as read')),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(help_text='Educational institution name', max_length=200)),
                ('institution_logo', models.ImageField(blank=True, help_text='Institution logo (recommended size: 100x100px, transparent background)', null=True, upload_to='institution_logos/')),
                ('degree', models.CharField(help_text='Degree obtained', max_length=200)),
                ('field_of_study', models.CharField(help_text='Field of study/major', max_length=200)),
                ('start_date', models.DateField(help_text='Start date')),
                ('end_date', models.DateField(blank=True, help_text='End date (leave blank if current)', null=True)),
                ('current', models.BooleanField(default=False, help_text='Currently studying here')),
                ('description', models.TextField(blank=True, help_text='Additional details about the program')),
                ('cpi', models.DecimalField(blank=True, decimal_places=2, help_text='CPI (0.00-10.00 scale, optional)', max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(10.0)])),
                ('achievements', models.TextField(blank=True, help_text='Academic achievements and honors')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
            ],
            options={
                'verbose_name': 'Education',
                'verbose_name_plural': 'Education',
                'ordering': ['-start_date', 'order'],
            },
        ),
        migrations.CreateModel(
            name='PersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Full name', max_length=100)),
                ('title', models.CharField(help_text='Professional title or role', max_length=200)),
                ('bio', models.TextField(help_text='Professional biography or summary')),
                ('email', models.EmailField(help_text='Primary email address', max_length=254)),
                ('phone', models.CharField(blank=True, help_text='Phone number (optional)', max_length=20)),
                ('location', models.CharField(blank=True, help_text='City, Country (optional)', max_length=100)),
                ('profile_image', models.CharField(default='assets/images/profile_pic.png', help_text='Path in static files', max_length=200)),
                ('resume', models.CharField(default='assets/docs/resume.pdf', help_text='Path in static files', max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Personal Information',
                'verbose_name_plural': 'Personal Information',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Skill name', max_length=100)),
                ('category', models.CharField(choices=[('programming', 'Programming Languages'), ('framework', 'Frameworks & Libraries'), ('database', 'Databases'), ('tool', 'Tools & Technologies'), ('soft', 'Soft Skills'), ('cloud', 'Cloud & DevOps'), ('design', 'Design & UI/UX')], help_text='Skill category', max_length=20)),
                ('proficiency', models.IntegerField(choices=[(1, '1/10'), (2, '2/10'), (3, '3/10'), (4, '4/10'), (5, '5/10'), (6, '6/10'), (7, '7/10'), (8, '8/10'), (9, '9/10'), (10, '10/10')], default=5, help_text='Proficiency level from 1-10', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('description', models.TextField(blank=True, help_text='Skill description (optional)')),
                ('icon', models.CharField(blank=True, help_text='Icon class (FontAwesome, etc.)', max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order within category')),
            ],
            options={
                'verbose_name': 'Skill',
                'verbose_name_plural': 'Skills',
                'ordering': ['category', 'order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Project title', max_length=200)),
                ('description', models.TextField(help_text='Detailed project description')),
                ('short_description', models.CharField(help_text='Brief project summary', max_length=300)),
                ('image', models.ImageField(blank=True, help_text='Project screenshot (optional)', upload_to='media/projects/')),
                ('github_url', models.URLField(blank=True, help_text='GitHub repository URL (optional)')),
                ('live_url', models.URLField(blank=True, help_text='Live demo URL (optional)')),
                ('featured', models.BooleanField(default=False, help_text='Mark as featured project')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('technologies', models.ManyToManyField(help_text='Technologies used', related_name='projects', to='portfolio_api.skill')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-featured', 'order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Experience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company', models.CharField(help_text='Company name', max_length=200)),
                ('company_logo', models.ImageField(blank=True, help_text='Company logo (recommended size: 100x100px, transparent background)', null=True, upload_to='company_logos/')),
                ('position', models.CharField(help_text='Job title/position', max_length=200)),
                ('location', models.CharField(blank=True, help_text='Work location (optional)', max_length=100)),
                ('start_date', models.DateField(help_text='Start date')),
                ('end_date', models.DateField(blank=True, help_text='End date (leave blank if current)', null=True)),
                ('current', models.BooleanField(default=False, help_text='Currently working here')),
                ('description', models.TextField(help_text='Job description and responsibilities')),
                ('achievements', models.TextField(blank=True, help_text='Key achievements and accomplishments')),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order')),
                ('technologies_used', models.ManyToManyField(blank=True, help_text='Technologies used in this role', related_name='experiences', to='portfolio_api.skill')),
            ],
            options={
                'verbose_name': 'Work Experience',
                'verbose_name_plural': 'Work Experience',
                'ordering': ['-start_date', 'order'],
            },
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('github', 'GitHub'), ('linkedin', 'LinkedIn'), ('leetcode', 'LeetCode'), ('codeforces', 'Codeforces'), ('kaggle', 'Kaggle'), ('website', 'Personal Website'), ('twitter', 'Twitter'), ('facebook', 'Facebook'), ('instagram', 'Instagram'), ('youtube', 'YouTube')], help_text='Social media platform or website name', max_length=20)),
                ('url', models.URLField(help_text='Profile or page URL')),
                ('display_text', models.CharField(blank=True, help_text='Optional custom display text (defaults to platform name)', max_length=100)),
                ('icon_class', models.CharField(blank=True, help_text="Optional icon class (e.g., 'fab fa-github' for Font Awesome)", max_length=50)),
                ('order', models.PositiveIntegerField(default=0, help_text='Display order (lower numbers appear first)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether to display this link')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('personal_info', models.ForeignKey(help_text='Related personal information', on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='portfolio_api.personalinfo')),
            ],
            options={
                'verbose_name': 'Social Link',
                'verbose_name_plural': 'Social Links',
                'ordering': ['order', 'platform'],
            },
        ),
    ]
